{"ast":null,"code":"var _jsxFileName = \"/home/tobit/private-codes/bank-demo/src/components/Transactions.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow'; //MUI Styles\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: '23.1em',\n    borderTop: 'black 1px solid'\n  }\n}); //SC Styles\n\nconst Container = styled.div`\nheight:29em;\nmargin: 0 2em 2em 4em;\nbackground-color:white;\nflex:8;\ndisplay:flex;\nflex-flow:column nowrap;\njustify-content:flex-start;\nalign-items:center;\nbox-shadow: 1px 1px 2px 1px rgba(0,0,0,0.75);\n`;\nconst Header = styled.h3`\ncolor:black;\nfont-weight:100;\nfont-size:1.5rem;\nmargin: 1em 0;\n`;\nconst StyledChange = styled.p`\nfont-size:0.9rem;\ncolor: ${props => props.isPositive ? 'green' : 'red'};\n`;\n\nconst Change = ({\n  number\n}) => /*#__PURE__*/React.createElement(StyledChange, {\n  isPositive: number >= 0,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }\n}, number >= 0 ? `$${number.toFixed(2)}` : `-$${(number * -1).toFixed(2)}`); //MUI Table settings\n\n\nconst columns = [{\n  id: 'date',\n  label: 'Date',\n  width: 1\n}, {\n  id: 'description',\n  label: 'Description',\n  width: 4\n}, {\n  id: 'reference',\n  label: 'Ref',\n  width: 1,\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'amount',\n  label: 'Amount',\n  width: 1,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}];\n\nfunction createData(date, description, reference, amount) {\n  return {\n    date,\n    description,\n    reference,\n    amount\n  };\n}\n\nconst rows = [createData('2020-06-09', \"Hell's Kitchen Pizza Takeaway\", 85746, -23.76), createData('2020-06-04', \"Interact Purchase - ELECTRONICS \", 54678, -480.00), createData('2020-06-01', \"ATM Withdrawl - INTERAC\", 12094, -60.00), createData('2020-06-01', \"Fees - Monthly\", 45678, -5.00), createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00), createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00), createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00), createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00), createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00), createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00), createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00), createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00)];\n\nfunction Transactions() {\n  const classes = useStyles();\n  const [account, setAccount] = React.useState('');\n  return /*#__PURE__*/React.createElement(Container, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Transaction History\"), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, rows.map(row => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 49\n        }\n      }, column.id === 'amount' ? /*#__PURE__*/React.createElement(Change, {\n        number: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 79\n        }\n      }) : value);\n    }));\n  }))))));\n}\n\nexport default Transactions;","map":{"version":3,"sources":["/home/tobit/private-codes/bank-demo/src/components/Transactions.js"],"names":["React","styled","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","useStyles","root","width","container","maxHeight","borderTop","Container","div","Header","h3","StyledChange","p","props","isPositive","Change","number","toFixed","columns","id","label","format","value","toLocaleString","align","createData","date","description","reference","amount","rows","Transactions","classes","account","setAccount","useState","map","column","minWidth","row","code"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n//MUI Styles\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: '23.1em',\n        borderTop: 'black 1px solid',\n    },\n});\n\n//SC Styles\nconst Container = styled.div`\nheight:29em;\nmargin: 0 2em 2em 4em;\nbackground-color:white;\nflex:8;\ndisplay:flex;\nflex-flow:column nowrap;\njustify-content:flex-start;\nalign-items:center;\nbox-shadow: 1px 1px 2px 1px rgba(0,0,0,0.75);\n`\n\nconst Header = styled.h3`\ncolor:black;\nfont-weight:100;\nfont-size:1.5rem;\nmargin: 1em 0;\n`\n\nconst StyledChange = styled.p`\nfont-size:0.9rem;\ncolor: ${props => props.isPositive ? 'green' : 'red'};\n`\n\nconst Change = ({ number }) =>\n  <StyledChange isPositive={number >= 0}>{number >= 0\n    ? `$${number.toFixed(2)}`\n    : `-$${(number*-1).toFixed(2)}`}</StyledChange>\n\n//MUI Table settings\nconst columns = [\n    { id: 'date', label: 'Date', width: 1 },\n    { id: 'description', label: 'Description', width: 4 },\n    {\n        id: 'reference',\n        label: 'Ref',\n        width: 1,\n        format: (value) => value.toLocaleString('en-US'),\n    },\n    {\n        id: 'amount',\n        label: 'Amount',\n        width: 1,\n        align:'right',\n        format: (value) => value.toLocaleString('en-US'),\n    },\n];\n\nfunction createData(date, description, reference, amount) {\n    return { date, description, reference, amount };\n}\n\nconst rows = [\n    createData('2020-06-09', \"Hell's Kitchen Pizza Takeaway\", 85746, -23.76),\n    createData('2020-06-04', \"Interact Purchase - ELECTRONICS \", 54678, -480.00),\n    createData('2020-06-01', \"ATM Withdrawl - INTERAC\", 12094, -60.00),\n    createData('2020-06-01', \"Fees - Monthly\", 45678, -5.00),\n    createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00),\n    createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00),\n    createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00),\n    createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00),\n    createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00),\n    createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00),\n    createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00),\n    createData('2020-06-01', \"Overseas Remittance CANADA\", 12094, 2500.00),\n];\n\nfunction Transactions() {\n    const classes = useStyles();\n    const [account, setAccount] = React.useState('');\n\n    return (\n        <Container className={classes.root}>\n            <Header>Transaction History</Header>\n            <Paper className={classes.root}>\n                <TableContainer className={classes.container}>\n                    <Table stickyHeader aria-label=\"sticky table\">\n                        <TableHead>\n                            <TableRow>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map((row) => {\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                        {columns.map((column) => {\n                                            const value = row[column.id];\n                                            return (\n                                                <TableCell key={column.id} align={column.align}>\n                                                    {column.id === 'amount' ? <Change number={value}/> : value}\n                                                </TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Paper>\n        </ Container>\n    );\n}\nexport default Transactions"]},"metadata":{},"sourceType":"module"}